{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/jjyjyjy/4-ohjunyeol?scriptVersionId=93230028\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown","outputs":[],"execution_count":0},{"cell_type":"markdown","id":"39e88d9a","metadata":{"papermill":{"duration":0.050116,"end_time":"2022-04-17T08:34:38.037665","exception":false,"start_time":"2022-04-17T08:34:37.987549","status":"completed"},"tags":[]},"source":["# **Kaggle - 타이타닉 생존자 예측하기**\n","\n","### **데이터 분석과 시각화를 위한 모듈, 머신러닝 모듈을 불러온다.**"]},{"cell_type":"code","execution_count":1,"id":"f1bfba16","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:38.146862Z","iopub.status.busy":"2022-04-17T08:34:38.14631Z","iopub.status.idle":"2022-04-17T08:34:39.411652Z","shell.execute_reply":"2022-04-17T08:34:39.412172Z","shell.execute_reply.started":"2022-04-17T08:30:39.662108Z"},"papermill":{"duration":1.326002,"end_time":"2022-04-17T08:34:39.412451","exception":false,"start_time":"2022-04-17T08:34:38.086449","status":"completed"},"tags":[]},"outputs":[],"source":["# 데이터 분석 자료\n","import pandas as pd\n","import numpy as np\n","import random as rnd\n","\n","# 시각화 자료\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","# 머신러닝 모듈\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.linear_model import Perceptron\n","from sklearn.linear_model import SGDClassifier\n","from sklearn.svm import SVC, LinearSVC\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.tree import DecisionTreeClassifier"]},{"cell_type":"markdown","id":"d6d0cacb","metadata":{"papermill":{"duration":0.048529,"end_time":"2022-04-17T08:34:39.508833","exception":false,"start_time":"2022-04-17T08:34:39.460304","status":"completed"},"tags":[]},"source":["### **훈련 셋과 테스트 셋이 저장되어 있는 csv 파일을 불러온다.**"]},{"cell_type":"code","execution_count":2,"id":"5e790a69","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:39.607244Z","iopub.status.busy":"2022-04-17T08:34:39.606641Z","iopub.status.idle":"2022-04-17T08:34:39.630864Z","shell.execute_reply":"2022-04-17T08:34:39.631372Z","shell.execute_reply.started":"2022-04-17T08:30:40.232824Z"},"papermill":{"duration":0.075366,"end_time":"2022-04-17T08:34:39.63153","exception":false,"start_time":"2022-04-17T08:34:39.556164","status":"completed"},"tags":[]},"outputs":[],"source":["#훈련세트와 테스트 셋 두가지를 불러옴.\n","train = pd.read_csv('../input/titanic/train.csv')\n","test = pd.read_csv('../input/titanic/test.csv')"]},{"cell_type":"markdown","id":"e5992dee","metadata":{"papermill":{"duration":0.046881,"end_time":"2022-04-17T08:34:39.725548","exception":false,"start_time":"2022-04-17T08:34:39.678667","status":"completed"},"tags":[]},"source":["#### **훈련셋의 앞부분을 불러와 확인한다.**"]},{"cell_type":"code","execution_count":3,"id":"0f3bb870","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:39.823174Z","iopub.status.busy":"2022-04-17T08:34:39.822576Z","iopub.status.idle":"2022-04-17T08:34:39.843857Z","shell.execute_reply":"2022-04-17T08:34:39.84432Z","shell.execute_reply.started":"2022-04-17T08:30:40.251328Z"},"papermill":{"duration":0.07198,"end_time":"2022-04-17T08:34:39.8445","exception":false,"start_time":"2022-04-17T08:34:39.77252","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Moran, Mr. James</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330877</td>\n","      <td>8.4583</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>McCarthy, Mr. Timothy J</td>\n","      <td>male</td>\n","      <td>54.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>17463</td>\n","      <td>51.8625</td>\n","      <td>E46</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Palsson, Master. Gosta Leonard</td>\n","      <td>male</td>\n","      <td>2.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>349909</td>\n","      <td>21.0750</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)</td>\n","      <td>female</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>347742</td>\n","      <td>11.1333</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Nasser, Mrs. Nicholas (Adele Achem)</td>\n","      <td>female</td>\n","      <td>14.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>237736</td>\n","      <td>30.0708</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","5            6         0       3   \n","6            7         0       1   \n","7            8         0       3   \n","8            9         1       3   \n","9           10         1       2   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","5                                   Moran, Mr. James    male   NaN      0   \n","6                            McCarthy, Mr. Timothy J    male  54.0      0   \n","7                     Palsson, Master. Gosta Leonard    male   2.0      3   \n","8  Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)  female  27.0      0   \n","9                Nasser, Mrs. Nicholas (Adele Achem)  female  14.0      1   \n","\n","   Parch            Ticket     Fare Cabin Embarked  \n","0      0         A/5 21171   7.2500   NaN        S  \n","1      0          PC 17599  71.2833   C85        C  \n","2      0  STON/O2. 3101282   7.9250   NaN        S  \n","3      0            113803  53.1000  C123        S  \n","4      0            373450   8.0500   NaN        S  \n","5      0            330877   8.4583   NaN        Q  \n","6      0             17463  51.8625   E46        S  \n","7      1            349909  21.0750   NaN        S  \n","8      2            347742  11.1333   NaN        S  \n","9      0            237736  30.0708   NaN        C  "]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["train.head(10)"]},{"cell_type":"markdown","id":"a2027c0a","metadata":{"papermill":{"duration":0.049535,"end_time":"2022-04-17T08:34:39.943773","exception":false,"start_time":"2022-04-17T08:34:39.894238","status":"completed"},"tags":[]},"source":[]},{"cell_type":"code","execution_count":4,"id":"510b8c44","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:40.046096Z","iopub.status.busy":"2022-04-17T08:34:40.045505Z","iopub.status.idle":"2022-04-17T08:34:40.06127Z","shell.execute_reply":"2022-04-17T08:34:40.061795Z","shell.execute_reply.started":"2022-04-17T08:30:40.275623Z"},"papermill":{"duration":0.068678,"end_time":"2022-04-17T08:34:40.061956","exception":false,"start_time":"2022-04-17T08:34:39.993278","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>3</td>\n","      <td>Wirz, Mr. Albert</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315154</td>\n","      <td>8.6625</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>3</td>\n","      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>897</td>\n","      <td>3</td>\n","      <td>Svensson, Mr. Johan Cervin</td>\n","      <td>male</td>\n","      <td>14.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7538</td>\n","      <td>9.2250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>898</td>\n","      <td>3</td>\n","      <td>Connolly, Miss. Kate</td>\n","      <td>female</td>\n","      <td>30.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330972</td>\n","      <td>7.6292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>899</td>\n","      <td>2</td>\n","      <td>Caldwell, Mr. Albert Francis</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>248738</td>\n","      <td>29.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>900</td>\n","      <td>3</td>\n","      <td>Abrahim, Mrs. Joseph (Sophie Halaut Easu)</td>\n","      <td>female</td>\n","      <td>18.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2657</td>\n","      <td>7.2292</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>901</td>\n","      <td>3</td>\n","      <td>Davies, Mr. John Samuel</td>\n","      <td>male</td>\n","      <td>21.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>A/4 48871</td>\n","      <td>24.1500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Pclass                                          Name     Sex  \\\n","0          892       3                              Kelly, Mr. James    male   \n","1          893       3              Wilkes, Mrs. James (Ellen Needs)  female   \n","2          894       2                     Myles, Mr. Thomas Francis    male   \n","3          895       3                              Wirz, Mr. Albert    male   \n","4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female   \n","5          897       3                    Svensson, Mr. Johan Cervin    male   \n","6          898       3                          Connolly, Miss. Kate  female   \n","7          899       2                  Caldwell, Mr. Albert Francis    male   \n","8          900       3     Abrahim, Mrs. Joseph (Sophie Halaut Easu)  female   \n","9          901       3                       Davies, Mr. John Samuel    male   \n","\n","    Age  SibSp  Parch     Ticket     Fare Cabin Embarked  \n","0  34.5      0      0     330911   7.8292   NaN        Q  \n","1  47.0      1      0     363272   7.0000   NaN        S  \n","2  62.0      0      0     240276   9.6875   NaN        Q  \n","3  27.0      0      0     315154   8.6625   NaN        S  \n","4  22.0      1      1    3101298  12.2875   NaN        S  \n","5  14.0      0      0       7538   9.2250   NaN        S  \n","6  30.0      0      0     330972   7.6292   NaN        Q  \n","7  26.0      1      1     248738  29.0000   NaN        S  \n","8  18.0      0      0       2657   7.2292   NaN        C  \n","9  21.0      2      0  A/4 48871  24.1500   NaN        S  "]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["test.head(10)"]},{"cell_type":"code","execution_count":5,"id":"7263ef03","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:40.164647Z","iopub.status.busy":"2022-04-17T08:34:40.164057Z","iopub.status.idle":"2022-04-17T08:34:40.185007Z","shell.execute_reply":"2022-04-17T08:34:40.185646Z","shell.execute_reply.started":"2022-04-17T08:30:40.293026Z"},"papermill":{"duration":0.074545,"end_time":"2022-04-17T08:34:40.185875","exception":false,"start_time":"2022-04-17T08:34:40.11133","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  891 non-null    int64  \n"," 1   Survived     891 non-null    int64  \n"," 2   Pclass       891 non-null    int64  \n"," 3   Name         891 non-null    object \n"," 4   Sex          891 non-null    object \n"," 5   Age          714 non-null    float64\n"," 6   SibSp        891 non-null    int64  \n"," 7   Parch        891 non-null    int64  \n"," 8   Ticket       891 non-null    object \n"," 9   Fare         891 non-null    float64\n"," 10  Cabin        204 non-null    object \n"," 11  Embarked     889 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 83.7+ KB\n"]}],"source":["train.info()"]},{"cell_type":"code","execution_count":6,"id":"d7ec7e7c","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:40.288713Z","iopub.status.busy":"2022-04-17T08:34:40.288176Z","iopub.status.idle":"2022-04-17T08:34:40.298222Z","shell.execute_reply":"2022-04-17T08:34:40.298635Z","shell.execute_reply.started":"2022-04-17T08:30:40.314115Z"},"papermill":{"duration":0.063053,"end_time":"2022-04-17T08:34:40.29879","exception":false,"start_time":"2022-04-17T08:34:40.235737","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 418 entries, 0 to 417\n","Data columns (total 11 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  418 non-null    int64  \n"," 1   Pclass       418 non-null    int64  \n"," 2   Name         418 non-null    object \n"," 3   Sex          418 non-null    object \n"," 4   Age          332 non-null    float64\n"," 5   SibSp        418 non-null    int64  \n"," 6   Parch        418 non-null    int64  \n"," 7   Ticket       418 non-null    object \n"," 8   Fare         417 non-null    float64\n"," 9   Cabin        91 non-null     object \n"," 10  Embarked     418 non-null    object \n","dtypes: float64(2), int64(4), object(5)\n","memory usage: 36.0+ KB\n"]}],"source":["test.info()"]},{"cell_type":"code","execution_count":7,"id":"371fe436","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:40.400643Z","iopub.status.busy":"2022-04-17T08:34:40.400098Z","iopub.status.idle":"2022-04-17T08:34:40.406488Z","shell.execute_reply":"2022-04-17T08:34:40.406902Z","shell.execute_reply.started":"2022-04-17T08:30:40.328243Z"},"papermill":{"duration":0.059066,"end_time":"2022-04-17T08:34:40.407085","exception":false,"start_time":"2022-04-17T08:34:40.348019","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["PassengerId      0\n","Survived         0\n","Pclass           0\n","Name             0\n","Sex              0\n","Age            177\n","SibSp            0\n","Parch            0\n","Ticket           0\n","Fare             0\n","Cabin          687\n","Embarked         2\n","dtype: int64"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["train.isnull().sum()"]},{"cell_type":"code","execution_count":8,"id":"ae8c22e1","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:40.518208Z","iopub.status.busy":"2022-04-17T08:34:40.517213Z","iopub.status.idle":"2022-04-17T08:34:40.528424Z","shell.execute_reply":"2022-04-17T08:34:40.528899Z","shell.execute_reply.started":"2022-04-17T08:30:40.338875Z"},"papermill":{"duration":0.071945,"end_time":"2022-04-17T08:34:40.529107","exception":false,"start_time":"2022-04-17T08:34:40.457162","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["PassengerId      0\n","Pclass           0\n","Name             0\n","Sex              0\n","Age             86\n","SibSp            0\n","Parch            0\n","Ticket           0\n","Fare             1\n","Cabin          327\n","Embarked         0\n","dtype: int64"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["test.isnull().sum()"]},{"cell_type":"code","execution_count":9,"id":"54651c22","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:40.645889Z","iopub.status.busy":"2022-04-17T08:34:40.645018Z","iopub.status.idle":"2022-04-17T08:34:40.679737Z","shell.execute_reply":"2022-04-17T08:34:40.680234Z","shell.execute_reply.started":"2022-04-17T08:30:40.350487Z"},"papermill":{"duration":0.090184,"end_time":"2022-04-17T08:34:40.680404","exception":false,"start_time":"2022-04-17T08:34:40.59022","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>714.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>446.000000</td>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>257.353842</td>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>14.526497</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>223.500000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.125000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>446.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>668.500000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>891.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       PassengerId    Survived      Pclass         Age       SibSp  \\\n","count   891.000000  891.000000  891.000000  714.000000  891.000000   \n","mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n","std     257.353842    0.486592    0.836071   14.526497    1.102743   \n","min       1.000000    0.000000    1.000000    0.420000    0.000000   \n","25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n","50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n","75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n","max     891.000000    1.000000    3.000000   80.000000    8.000000   \n","\n","            Parch        Fare  \n","count  891.000000  891.000000  \n","mean     0.381594   32.204208  \n","std      0.806057   49.693429  \n","min      0.000000    0.000000  \n","25%      0.000000    7.910400  \n","50%      0.000000   14.454200  \n","75%      0.000000   31.000000  \n","max      6.000000  512.329200  "]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["train.describe()"]},{"cell_type":"code","execution_count":10,"id":"f7c794a1","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:40.786053Z","iopub.status.busy":"2022-04-17T08:34:40.785099Z","iopub.status.idle":"2022-04-17T08:34:40.803828Z","shell.execute_reply":"2022-04-17T08:34:40.804375Z","shell.execute_reply.started":"2022-04-17T08:30:40.385497Z"},"papermill":{"duration":0.073613,"end_time":"2022-04-17T08:34:40.804555","exception":false,"start_time":"2022-04-17T08:34:40.730942","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Ticket</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>204</td>\n","      <td>889</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>891</td>\n","      <td>2</td>\n","      <td>681</td>\n","      <td>147</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>347082</td>\n","      <td>B96 B98</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>1</td>\n","      <td>577</td>\n","      <td>7</td>\n","      <td>4</td>\n","      <td>644</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                           Name   Sex  Ticket    Cabin Embarked\n","count                       891   891     891      204      889\n","unique                      891     2     681      147        3\n","top     Braund, Mr. Owen Harris  male  347082  B96 B98        S\n","freq                          1   577       7        4      644"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["train.describe(include='O')"]},{"cell_type":"code","execution_count":11,"id":"3afc0818","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:40.910254Z","iopub.status.busy":"2022-04-17T08:34:40.909367Z","iopub.status.idle":"2022-04-17T08:34:40.922762Z","shell.execute_reply":"2022-04-17T08:34:40.923319Z","shell.execute_reply.started":"2022-04-17T08:30:40.405619Z"},"papermill":{"duration":0.067823,"end_time":"2022-04-17T08:34:40.923483","exception":false,"start_time":"2022-04-17T08:34:40.85566","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pclass</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.629630</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.472826</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.242363</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Pclass  Survived\n","0       1  0.629630\n","1       2  0.472826\n","2       3  0.242363"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["train[['Pclass','Survived']].groupby(['Pclass'],as_index=False).mean().sort_values(by='Survived', ascending=False)"]},{"cell_type":"code","execution_count":12,"id":"5210bd33","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:41.029903Z","iopub.status.busy":"2022-04-17T08:34:41.029029Z","iopub.status.idle":"2022-04-17T08:34:41.040817Z","shell.execute_reply":"2022-04-17T08:34:41.041307Z","shell.execute_reply.started":"2022-04-17T08:30:40.419532Z"},"papermill":{"duration":0.066345,"end_time":"2022-04-17T08:34:41.041464","exception":false,"start_time":"2022-04-17T08:34:40.975119","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>female</td>\n","      <td>0.742038</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>male</td>\n","      <td>0.188908</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      Sex  Survived\n","0  female  0.742038\n","1    male  0.188908"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["train[[\"Sex\", \"Survived\"]].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)"]},{"cell_type":"code","execution_count":13,"id":"f6cd877a","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:41.148904Z","iopub.status.busy":"2022-04-17T08:34:41.148038Z","iopub.status.idle":"2022-04-17T08:34:41.159719Z","shell.execute_reply":"2022-04-17T08:34:41.160277Z","shell.execute_reply.started":"2022-04-17T08:30:40.435111Z"},"papermill":{"duration":0.066828,"end_time":"2022-04-17T08:34:41.160437","exception":false,"start_time":"2022-04-17T08:34:41.093609","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SibSp</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.535885</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.464286</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.345395</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0.250000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0.166667</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   SibSp  Survived\n","1      1  0.535885\n","2      2  0.464286\n","0      0  0.345395\n","3      3  0.250000\n","4      4  0.166667\n","5      5  0.000000\n","6      8  0.000000"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["train[[\"SibSp\", \"Survived\"]].groupby(['SibSp'], as_index=False).mean().sort_values(by='Survived', ascending=False)"]},{"cell_type":"code","execution_count":14,"id":"8b09ea05","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:41.267622Z","iopub.status.busy":"2022-04-17T08:34:41.266765Z","iopub.status.idle":"2022-04-17T08:34:41.278904Z","shell.execute_reply":"2022-04-17T08:34:41.279426Z","shell.execute_reply.started":"2022-04-17T08:30:40.454454Z"},"papermill":{"duration":0.067033,"end_time":"2022-04-17T08:34:41.279578","exception":false,"start_time":"2022-04-17T08:34:41.212545","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Parch</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0.600000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.550847</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.343658</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>0.200000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Parch  Survived\n","3      3  0.600000\n","1      1  0.550847\n","2      2  0.500000\n","0      0  0.343658\n","5      5  0.200000\n","4      4  0.000000\n","6      6  0.000000"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["train[[\"Parch\", \"Survived\"]].groupby(['Parch'], as_index=False).mean().sort_values(by='Survived', ascending=False)"]},{"cell_type":"code","execution_count":15,"id":"051fe918","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:41.387018Z","iopub.status.busy":"2022-04-17T08:34:41.38614Z","iopub.status.idle":"2022-04-17T08:34:41.83639Z","shell.execute_reply":"2022-04-17T08:34:41.835899Z","shell.execute_reply.started":"2022-04-17T08:30:40.470378Z"},"papermill":{"duration":0.50493,"end_time":"2022-04-17T08:34:41.836536","exception":false,"start_time":"2022-04-17T08:34:41.331606","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f2cb045cb50>"]},"execution_count":15,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"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\n","text/plain":["<Figure size 432x216 with 2 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["graph=sns.FacetGrid(train, col='Survived')\n","graph.map(plt.hist,'Age',bins=20)"]},{"cell_type":"code","execution_count":16,"id":"834b8f96","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:41.946643Z","iopub.status.busy":"2022-04-17T08:34:41.945718Z","iopub.status.idle":"2022-04-17T08:34:43.339084Z","shell.execute_reply":"2022-04-17T08:34:43.339569Z","shell.execute_reply.started":"2022-04-17T08:30:40.907782Z"},"papermill":{"duration":1.450059,"end_time":"2022-04-17T08:34:43.339814","exception":false,"start_time":"2022-04-17T08:34:41.889755","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 514.88x475.2 with 6 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["grid = sns.FacetGrid(train, col='Survived', row='Pclass', height=2.2, aspect=1.6)\n","grid.map(plt.hist, 'Age', alpha=.5, bins=20)\n","grid.add_legend();"]},{"cell_type":"code","execution_count":17,"id":"801bd00d","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:43.457797Z","iopub.status.busy":"2022-04-17T08:34:43.456879Z","iopub.status.idle":"2022-04-17T08:34:44.593288Z","shell.execute_reply":"2022-04-17T08:34:44.592795Z","shell.execute_reply.started":"2022-04-17T08:30:42.285634Z"},"papermill":{"duration":1.199062,"end_time":"2022-04-17T08:34:44.59343","exception":false,"start_time":"2022-04-17T08:34:43.394368","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/opt/conda/lib/python3.7/site-packages/seaborn/axisgrid.py:670: UserWarning: Using the pointplot function without specifying `order` is likely to produce an incorrect plot.\n","  warnings.warn(warning)\n","/opt/conda/lib/python3.7/site-packages/seaborn/axisgrid.py:675: UserWarning: Using the pointplot function without specifying `hue_order` is likely to produce an incorrect plot.\n","  warnings.warn(warning)\n"]},{"data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f2cade9d550>"]},"execution_count":17,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 323.94x475.2 with 3 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["grid = sns.FacetGrid(train, row='Embarked', height=2.2, aspect=1.6)\n","grid.map(sns.pointplot, 'Pclass', 'Survived', 'Sex', palette='deep')\n","grid.add_legend()"]},{"cell_type":"code","execution_count":18,"id":"2f7c0785","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:44.711803Z","iopub.status.busy":"2022-04-17T08:34:44.711236Z","iopub.status.idle":"2022-04-17T08:34:45.564278Z","shell.execute_reply":"2022-04-17T08:34:45.563758Z","shell.execute_reply.started":"2022-04-17T08:30:43.410306Z"},"papermill":{"duration":0.914953,"end_time":"2022-04-17T08:34:45.56442","exception":false,"start_time":"2022-04-17T08:34:44.649467","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/opt/conda/lib/python3.7/site-packages/seaborn/axisgrid.py:670: UserWarning: Using the barplot function without specifying `order` is likely to produce an incorrect plot.\n","  warnings.warn(warning)\n"]},{"data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f2cadf0c490>"]},"execution_count":18,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 514.88x475.2 with 6 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["grid = sns.FacetGrid(train, row='Embarked', col='Survived', height=2.2, aspect=1.6)\n","grid.map(sns.barplot, 'Sex', 'Fare', alpha=1, ci=None)\n","grid.add_legend()"]},{"cell_type":"code","execution_count":19,"id":"b3fb7342","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:45.685397Z","iopub.status.busy":"2022-04-17T08:34:45.684684Z","iopub.status.idle":"2022-04-17T08:34:45.686626Z","shell.execute_reply":"2022-04-17T08:34:45.68705Z","shell.execute_reply.started":"2022-04-17T08:30:44.279838Z"},"papermill":{"duration":0.065531,"end_time":"2022-04-17T08:34:45.687212","exception":false,"start_time":"2022-04-17T08:34:45.621681","status":"completed"},"tags":[]},"outputs":[],"source":["train = train.drop(['Ticket', 'Cabin'], axis=1)\n","test = test.drop(['Ticket', 'Cabin'], axis=1)\n","combine = [train, test]"]},{"cell_type":"code","execution_count":20,"id":"49ec46c2","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:45.813641Z","iopub.status.busy":"2022-04-17T08:34:45.812811Z","iopub.status.idle":"2022-04-17T08:34:45.81576Z","shell.execute_reply":"2022-04-17T08:34:45.81622Z","shell.execute_reply.started":"2022-04-17T08:30:44.287091Z"},"papermill":{"duration":0.071832,"end_time":"2022-04-17T08:34:45.816377","exception":false,"start_time":"2022-04-17T08:34:45.744545","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","\n","   Parch     Fare Embarked  \n","0      0   7.2500        S  \n","1      0  71.2833        C  \n","2      0   7.9250        S  \n","3      0  53.1000        S  \n","4      0   8.0500        S  "]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["train.head(5)"]},{"cell_type":"code","execution_count":21,"id":"e5ca59d6","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:45.943731Z","iopub.status.busy":"2022-04-17T08:34:45.943127Z","iopub.status.idle":"2022-04-17T08:34:45.945468Z","shell.execute_reply":"2022-04-17T08:34:45.945995Z","shell.execute_reply.started":"2022-04-17T08:30:44.305774Z"},"papermill":{"duration":0.072253,"end_time":"2022-04-17T08:34:45.946158","exception":false,"start_time":"2022-04-17T08:34:45.873905","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.8292</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.0000</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>9.6875</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>3</td>\n","      <td>Wirz, Mr. Albert</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.6625</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>3</td>\n","      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n","      <td>female</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.2875</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Pclass                                          Name     Sex  \\\n","0          892       3                              Kelly, Mr. James    male   \n","1          893       3              Wilkes, Mrs. James (Ellen Needs)  female   \n","2          894       2                     Myles, Mr. Thomas Francis    male   \n","3          895       3                              Wirz, Mr. Albert    male   \n","4          896       3  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female   \n","\n","    Age  SibSp  Parch     Fare Embarked  \n","0  34.5      0      0   7.8292        Q  \n","1  47.0      1      0   7.0000        S  \n","2  62.0      0      0   9.6875        Q  \n","3  27.0      0      0   8.6625        S  \n","4  22.0      1      1  12.2875        S  "]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["test.head(5)"]},{"cell_type":"code","execution_count":22,"id":"2d19d2bc","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:46.065987Z","iopub.status.busy":"2022-04-17T08:34:46.065353Z","iopub.status.idle":"2022-04-17T08:34:46.091418Z","shell.execute_reply":"2022-04-17T08:34:46.090947Z","shell.execute_reply.started":"2022-04-17T08:30:44.325903Z"},"papermill":{"duration":0.086965,"end_time":"2022-04-17T08:34:46.091548","exception":false,"start_time":"2022-04-17T08:34:46.004583","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Sex</th>\n","      <th>female</th>\n","      <th>male</th>\n","    </tr>\n","    <tr>\n","      <th>Title</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Capt</th>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Col</th>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Countess</th>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Don</th>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Dr</th>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Jonkheer</th>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Lady</th>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Major</th>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Master</th>\n","      <td>0</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>Miss</th>\n","      <td>182</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Mlle</th>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Mme</th>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Mr</th>\n","      <td>0</td>\n","      <td>517</td>\n","    </tr>\n","    <tr>\n","      <th>Mrs</th>\n","      <td>125</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Ms</th>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Rev</th>\n","      <td>0</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Sir</th>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["Sex       female  male\n","Title                 \n","Capt           0     1\n","Col            0     2\n","Countess       1     0\n","Don            0     1\n","Dr             1     6\n","Jonkheer       0     1\n","Lady           1     0\n","Major          0     2\n","Master         0    40\n","Miss         182     0\n","Mlle           2     0\n","Mme            1     0\n","Mr             0   517\n","Mrs          125     0\n","Ms             1     0\n","Rev            0     6\n","Sir            0     1"]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["for dataset in combine:\n","    dataset['Title'] = dataset.Name.str.extract(' ([A-Za-z]+)\\.', expand=False)\n","\n","pd.crosstab(train['Title'], train['Sex'])"]},{"cell_type":"code","execution_count":23,"id":"1d456077","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:46.212351Z","iopub.status.busy":"2022-04-17T08:34:46.211768Z","iopub.status.idle":"2022-04-17T08:34:46.230137Z","shell.execute_reply":"2022-04-17T08:34:46.229634Z","shell.execute_reply.started":"2022-04-17T08:30:44.349627Z"},"papermill":{"duration":0.080139,"end_time":"2022-04-17T08:34:46.230264","exception":false,"start_time":"2022-04-17T08:34:46.150125","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Title</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Master</td>\n","      <td>0.575000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Miss</td>\n","      <td>0.702703</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mr</td>\n","      <td>0.156673</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mrs</td>\n","      <td>0.793651</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Rare</td>\n","      <td>0.347826</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Title  Survived\n","0  Master  0.575000\n","1    Miss  0.702703\n","2      Mr  0.156673\n","3     Mrs  0.793651\n","4    Rare  0.347826"]},"execution_count":23,"metadata":{},"output_type":"execute_result"}],"source":["for dataset in combine:\n","    dataset['Title'] = dataset['Title'].replace(['Lady', 'Countess','Capt', 'Col',\\\n"," \t'Don', 'Dr','Jonkheer', 'Major', 'Rev', 'Sir', 'Dona'], 'Rare')\n","\n","    dataset['Title'] = dataset['Title'].replace('Mlle', 'Miss')\n","    dataset['Title'] = dataset['Title'].replace('Ms', 'Miss')\n","    dataset['Title'] = dataset['Title'].replace('Mme', 'Mrs')\n","    \n","train[['Title', 'Survived']].groupby(['Title'], as_index=False).mean()"]},{"cell_type":"code","execution_count":24,"id":"e759769a","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:46.352667Z","iopub.status.busy":"2022-04-17T08:34:46.352125Z","iopub.status.idle":"2022-04-17T08:34:46.358163Z","shell.execute_reply":"2022-04-17T08:34:46.358665Z","shell.execute_reply.started":"2022-04-17T08:30:44.369183Z"},"papermill":{"duration":0.068582,"end_time":"2022-04-17T08:34:46.358816","exception":false,"start_time":"2022-04-17T08:34:46.290234","status":"completed"},"tags":[]},"outputs":[],"source":["title_mapping = {\"Mr\": 1, \"Miss\": 2, \"Mrs\": 3, \"Master\": 4, \"Rare\": 5}\n","for dataset in combine:\n","    dataset['Title'] = dataset['Title'].map(title_mapping)\n","    dataset['Title'] = dataset['Title'].fillna(0)"]},{"cell_type":"code","execution_count":25,"id":"8ee02da7","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:46.480017Z","iopub.status.busy":"2022-04-17T08:34:46.479461Z","iopub.status.idle":"2022-04-17T08:34:46.493369Z","shell.execute_reply":"2022-04-17T08:34:46.492813Z","shell.execute_reply.started":"2022-04-17T08:30:44.377425Z"},"papermill":{"duration":0.075751,"end_time":"2022-04-17T08:34:46.493494","exception":false,"start_time":"2022-04-17T08:34:46.417743","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Moran, Mr. James</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.4583</td>\n","      <td>Q</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>McCarthy, Mr. Timothy J</td>\n","      <td>male</td>\n","      <td>54.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>51.8625</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Palsson, Master. Gosta Leonard</td>\n","      <td>male</td>\n","      <td>2.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>21.0750</td>\n","      <td>S</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)</td>\n","      <td>female</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>11.1333</td>\n","      <td>S</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Nasser, Mrs. Nicholas (Adele Achem)</td>\n","      <td>female</td>\n","      <td>14.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>30.0708</td>\n","      <td>C</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","3            4         1       1   \n","4            5         0       3   \n","5            6         0       3   \n","6            7         0       1   \n","7            8         0       3   \n","8            9         1       3   \n","9           10         1       2   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                           Allen, Mr. William Henry    male  35.0      0   \n","5                                   Moran, Mr. James    male   NaN      0   \n","6                            McCarthy, Mr. Timothy J    male  54.0      0   \n","7                     Palsson, Master. Gosta Leonard    male   2.0      3   \n","8  Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)  female  27.0      0   \n","9                Nasser, Mrs. Nicholas (Adele Achem)  female  14.0      1   \n","\n","   Parch     Fare Embarked  Title  \n","0      0   7.2500        S      1  \n","1      0  71.2833        C      3  \n","2      0   7.9250        S      2  \n","3      0  53.1000        S      3  \n","4      0   8.0500        S      1  \n","5      0   8.4583        Q      1  \n","6      0  51.8625        S      1  \n","7      1  21.0750        S      4  \n","8      2  11.1333        S      3  \n","9      0  30.0708        C      3  "]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["train.head(10)"]},{"cell_type":"code","execution_count":26,"id":"175ade0b","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:46.618945Z","iopub.status.busy":"2022-04-17T08:34:46.617346Z","iopub.status.idle":"2022-04-17T08:34:46.622201Z","shell.execute_reply":"2022-04-17T08:34:46.622612Z","shell.execute_reply.started":"2022-04-17T08:30:44.399542Z"},"papermill":{"duration":0.069695,"end_time":"2022-04-17T08:34:46.62276","exception":false,"start_time":"2022-04-17T08:34:46.553065","status":"completed"},"tags":[]},"outputs":[],"source":["train = train.drop(['Name', 'PassengerId'], axis=1)\n","test = test.drop(['Name'], axis=1)\n","combine = [train, test]"]},{"cell_type":"code","execution_count":27,"id":"a030cf76","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:46.753519Z","iopub.status.busy":"2022-04-17T08:34:46.752926Z","iopub.status.idle":"2022-04-17T08:34:46.75645Z","shell.execute_reply":"2022-04-17T08:34:46.756822Z","shell.execute_reply.started":"2022-04-17T08:30:44.407723Z"},"papermill":{"duration":0.074676,"end_time":"2022-04-17T08:34:46.757001","exception":false,"start_time":"2022-04-17T08:34:46.682325","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass     Sex   Age  SibSp  Parch     Fare Embarked  Title\n","0         0       3    male  22.0      1      0   7.2500        S      1\n","1         1       1  female  38.0      1      0  71.2833        C      3\n","2         1       3  female  26.0      0      0   7.9250        S      2\n","3         1       1  female  35.0      1      0  53.1000        S      3\n","4         0       3    male  35.0      0      0   8.0500        S      1"]},"execution_count":27,"metadata":{},"output_type":"execute_result"}],"source":["train.head(5)"]},{"cell_type":"code","execution_count":28,"id":"2e06da18","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:46.882115Z","iopub.status.busy":"2022-04-17T08:34:46.881543Z","iopub.status.idle":"2022-04-17T08:34:46.885215Z","shell.execute_reply":"2022-04-17T08:34:46.885629Z","shell.execute_reply.started":"2022-04-17T08:30:44.430651Z"},"papermill":{"duration":0.068629,"end_time":"2022-04-17T08:34:46.885779","exception":false,"start_time":"2022-04-17T08:34:46.81715","status":"completed"},"tags":[]},"outputs":[],"source":["for dataset in combine:\n","    dataset['Sex'] = dataset['Sex'].map({'female': 1, 'male': 0}).astype(int)"]},{"cell_type":"code","execution_count":29,"id":"21078941","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:47.011638Z","iopub.status.busy":"2022-04-17T08:34:47.011102Z","iopub.status.idle":"2022-04-17T08:34:47.021412Z","shell.execute_reply":"2022-04-17T08:34:47.021828Z","shell.execute_reply.started":"2022-04-17T08:30:44.438728Z"},"papermill":{"duration":0.075588,"end_time":"2022-04-17T08:34:47.022009","exception":false,"start_time":"2022-04-17T08:34:46.946421","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex   Age  SibSp  Parch     Fare Embarked  Title\n","0         0       3    0  22.0      1      0   7.2500        S      1\n","1         1       1    1  38.0      1      0  71.2833        C      3\n","2         1       3    1  26.0      0      0   7.9250        S      2\n","3         1       1    1  35.0      1      0  53.1000        S      3\n","4         0       3    0  35.0      0      0   8.0500        S      1"]},"execution_count":29,"metadata":{},"output_type":"execute_result"}],"source":["train.head(5) "]},{"cell_type":"code","execution_count":30,"id":"58715629","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:47.149045Z","iopub.status.busy":"2022-04-17T08:34:47.148438Z","iopub.status.idle":"2022-04-17T08:34:48.410522Z","shell.execute_reply":"2022-04-17T08:34:48.411126Z","shell.execute_reply.started":"2022-04-17T08:30:44.458235Z"},"papermill":{"duration":1.32625,"end_time":"2022-04-17T08:34:48.411323","exception":false,"start_time":"2022-04-17T08:34:47.085073","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f2cad9fa350>"]},"execution_count":30,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 514.88x475.2 with 6 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["grid = sns.FacetGrid(train, row='Pclass', col='Sex', height=2.2, aspect=1.6)\n","grid.map(plt.hist, 'Age', alpha=1, bins=20)\n","grid.add_legend()"]},{"cell_type":"code","execution_count":31,"id":"cd00f5fb","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:48.556021Z","iopub.status.busy":"2022-04-17T08:34:48.555379Z","iopub.status.idle":"2022-04-17T08:34:48.558321Z","shell.execute_reply":"2022-04-17T08:34:48.557775Z","shell.execute_reply.started":"2022-04-17T08:30:45.742713Z"},"papermill":{"duration":0.080821,"end_time":"2022-04-17T08:34:48.558445","exception":false,"start_time":"2022-04-17T08:34:48.477624","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["array([[0., 0., 0.],\n","       [0., 0., 0.]])"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["g_ages = np.zeros((2,3))\n","g_ages"]},{"cell_type":"code","execution_count":32,"id":"5864e993","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:48.694241Z","iopub.status.busy":"2022-04-17T08:34:48.693637Z","iopub.status.idle":"2022-04-17T08:34:48.714593Z","shell.execute_reply":"2022-04-17T08:34:48.715031Z","shell.execute_reply.started":"2022-04-17T08:30:45.756492Z"},"papermill":{"duration":0.094549,"end_time":"2022-04-17T08:34:48.7152","exception":false,"start_time":"2022-04-17T08:34:48.620651","status":"completed"},"tags":[]},"outputs":[],"source":["for dataset in combine:\n","    for i in range(0, 2):\n","        for j in range(0, 3):\n","            guess = dataset[(dataset['Sex'] == i) & \\\n","                                  (dataset['Pclass'] == j+1)]['Age'].dropna()\n","\n","            age_what = guess.median()\n","\n","            g_ages[i,j] = int( age_what/0.5 + 0.5 ) * 0.5\n","            \n","    for i in range(0, 2):\n","        for j in range(0, 3):\n","            dataset.loc[ (dataset.Age.isnull()) & (dataset.Sex == i) & (dataset.Pclass == j+1),\\\n","                    'Age'] = g_ages[i,j]\n","\n","    dataset['Age'] = dataset['Age'].astype(int)\n"]},{"cell_type":"code","execution_count":33,"id":"663796b5","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:48.843537Z","iopub.status.busy":"2022-04-17T08:34:48.842959Z","iopub.status.idle":"2022-04-17T08:34:48.852289Z","shell.execute_reply":"2022-04-17T08:34:48.852674Z","shell.execute_reply.started":"2022-04-17T08:30:45.797929Z"},"papermill":{"duration":0.075334,"end_time":"2022-04-17T08:34:48.85284","exception":false,"start_time":"2022-04-17T08:34:48.777506","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex  Age  SibSp  Parch     Fare Embarked  Title\n","0         0       3    0   22      1      0   7.2500        S      1\n","1         1       1    1   38      1      0  71.2833        C      3\n","2         1       3    1   26      0      0   7.9250        S      2\n","3         1       1    1   35      1      0  53.1000        S      3\n","4         0       3    0   35      0      0   8.0500        S      1"]},"execution_count":33,"metadata":{},"output_type":"execute_result"}],"source":["train.head(5)"]},{"cell_type":"code","execution_count":34,"id":"8abca2e8","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:48.981892Z","iopub.status.busy":"2022-04-17T08:34:48.981298Z","iopub.status.idle":"2022-04-17T08:34:49.001798Z","shell.execute_reply":"2022-04-17T08:34:49.002224Z","shell.execute_reply.started":"2022-04-17T08:30:45.812905Z"},"papermill":{"duration":0.086905,"end_time":"2022-04-17T08:34:49.002388","exception":false,"start_time":"2022-04-17T08:34:48.915483","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AgeBand</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(-0.08, 16.0]</td>\n","      <td>0.550000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(16.0, 32.0]</td>\n","      <td>0.337374</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(32.0, 48.0]</td>\n","      <td>0.412037</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(48.0, 64.0]</td>\n","      <td>0.434783</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>(64.0, 80.0]</td>\n","      <td>0.090909</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         AgeBand  Survived\n","0  (-0.08, 16.0]  0.550000\n","1   (16.0, 32.0]  0.337374\n","2   (32.0, 48.0]  0.412037\n","3   (48.0, 64.0]  0.434783\n","4   (64.0, 80.0]  0.090909"]},"execution_count":34,"metadata":{},"output_type":"execute_result"}],"source":["train['AgeBand'] = pd.cut(train['Age'], 5)\n","train[['AgeBand', 'Survived']].groupby(['AgeBand'], as_index=False).mean().sort_values(by='AgeBand', ascending=True)"]},{"cell_type":"code","execution_count":35,"id":"e2988e91","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:49.131349Z","iopub.status.busy":"2022-04-17T08:34:49.130748Z","iopub.status.idle":"2022-04-17T08:34:49.149916Z","shell.execute_reply":"2022-04-17T08:34:49.150333Z","shell.execute_reply.started":"2022-04-17T08:30:45.833074Z"},"papermill":{"duration":0.085252,"end_time":"2022-04-17T08:34:49.150501","exception":false,"start_time":"2022-04-17T08:34:49.065249","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>AgeBand</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>3</td>\n","      <td>(32.0, 48.0]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>(16.0, 32.0]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>3</td>\n","      <td>(32.0, 48.0]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>(32.0, 48.0]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex  Age  SibSp  Parch     Fare Embarked  Title  \\\n","0         0       3    0    1      1      0   7.2500        S      1   \n","1         1       1    1    2      1      0  71.2833        C      3   \n","2         1       3    1    1      0      0   7.9250        S      2   \n","3         1       1    1    2      1      0  53.1000        S      3   \n","4         0       3    0    2      0      0   8.0500        S      1   \n","\n","        AgeBand  \n","0  (16.0, 32.0]  \n","1  (32.0, 48.0]  \n","2  (16.0, 32.0]  \n","3  (32.0, 48.0]  \n","4  (32.0, 48.0]  "]},"execution_count":35,"metadata":{},"output_type":"execute_result"}],"source":["for dataset in combine:    \n","    dataset.loc[ dataset['Age'] <= 16, 'Age'] = 0\n","    dataset.loc[(dataset['Age'] > 16) & (dataset['Age'] <= 32), 'Age'] = 1\n","    dataset.loc[(dataset['Age'] > 32) & (dataset['Age'] <= 48), 'Age'] = 2\n","    dataset.loc[(dataset['Age'] > 48) & (dataset['Age'] <= 64), 'Age'] = 3\n","    dataset.loc[ dataset['Age'] > 64, 'Age']\n","train.head()"]},{"cell_type":"code","execution_count":36,"id":"b741111b","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:49.279935Z","iopub.status.busy":"2022-04-17T08:34:49.279368Z","iopub.status.idle":"2022-04-17T08:34:49.29036Z","shell.execute_reply":"2022-04-17T08:34:49.290776Z","shell.execute_reply.started":"2022-04-17T08:30:45.859782Z"},"papermill":{"duration":0.076983,"end_time":"2022-04-17T08:34:49.290942","exception":false,"start_time":"2022-04-17T08:34:49.213959","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex  Age  SibSp  Parch     Fare Embarked  Title\n","0         0       3    0    1      1      0   7.2500        S      1\n","1         1       1    1    2      1      0  71.2833        C      3\n","2         1       3    1    1      0      0   7.9250        S      2\n","3         1       1    1    2      1      0  53.1000        S      3\n","4         0       3    0    2      0      0   8.0500        S      1"]},"execution_count":36,"metadata":{},"output_type":"execute_result"}],"source":["train = train.drop(['AgeBand'], axis=1)\n","combine = [train, test]\n","train.head()"]},{"cell_type":"code","execution_count":37,"id":"afd0c50f","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:49.421736Z","iopub.status.busy":"2022-04-17T08:34:49.420834Z","iopub.status.idle":"2022-04-17T08:34:49.435436Z","shell.execute_reply":"2022-04-17T08:34:49.435948Z","shell.execute_reply.started":"2022-04-17T08:30:45.873042Z"},"papermill":{"duration":0.081595,"end_time":"2022-04-17T08:34:49.436139","exception":false,"start_time":"2022-04-17T08:34:49.354544","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FamilySize</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>0.724138</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.578431</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.552795</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.303538</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.200000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>0.136364</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>11</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   FamilySize  Survived\n","3           4  0.724138\n","2           3  0.578431\n","1           2  0.552795\n","6           7  0.333333\n","0           1  0.303538\n","4           5  0.200000\n","5           6  0.136364\n","7           8  0.000000\n","8          11  0.000000"]},"execution_count":37,"metadata":{},"output_type":"execute_result"}],"source":["for dataset in combine:\n","    dataset['FamilySize'] = dataset['SibSp'] + dataset['Parch'] + 1\n","\n","train[['FamilySize', 'Survived']].groupby(['FamilySize'], as_index=False).mean().sort_values(by='Survived', ascending=False)"]},{"cell_type":"code","execution_count":38,"id":"dab98707","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:49.572289Z","iopub.status.busy":"2022-04-17T08:34:49.570746Z","iopub.status.idle":"2022-04-17T08:34:49.582516Z","shell.execute_reply":"2022-04-17T08:34:49.582053Z","shell.execute_reply.started":"2022-04-17T08:30:45.889254Z"},"papermill":{"duration":0.081863,"end_time":"2022-04-17T08:34:49.582644","exception":false,"start_time":"2022-04-17T08:34:49.500781","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>IsAlone</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.505650</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.303538</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   IsAlone  Survived\n","0        0  0.505650\n","1        1  0.303538"]},"execution_count":38,"metadata":{},"output_type":"execute_result"}],"source":["for dataset in combine:\n","    dataset['IsAlone'] = 0\n","    dataset.loc[dataset['FamilySize'] == 1, 'IsAlone'] = 1\n","\n","train[['IsAlone', 'Survived']].groupby(['IsAlone'], as_index=False).mean()"]},{"cell_type":"code","execution_count":39,"id":"0baf4c5d","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:49.715722Z","iopub.status.busy":"2022-04-17T08:34:49.714816Z","iopub.status.idle":"2022-04-17T08:34:49.720661Z","shell.execute_reply":"2022-04-17T08:34:49.721159Z","shell.execute_reply.started":"2022-04-17T08:30:45.904181Z"},"papermill":{"duration":0.073694,"end_time":"2022-04-17T08:34:49.721313","exception":false,"start_time":"2022-04-17T08:34:49.647619","status":"completed"},"tags":[]},"outputs":[],"source":["train = train.drop(['Parch', 'SibSp', 'FamilySize'], axis=1)\n","test = test.drop(['Parch', 'SibSp', 'FamilySize'], axis=1)\n","combine = [train, test]"]},{"cell_type":"code","execution_count":40,"id":"43dd62e9","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:49.860656Z","iopub.status.busy":"2022-04-17T08:34:49.859946Z","iopub.status.idle":"2022-04-17T08:34:49.863349Z","shell.execute_reply":"2022-04-17T08:34:49.863775Z","shell.execute_reply.started":"2022-04-17T08:30:45.913641Z"},"papermill":{"duration":0.078074,"end_time":"2022-04-17T08:34:49.86393","exception":false,"start_time":"2022-04-17T08:34:49.785856","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>IsAlone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex  Age     Fare Embarked  Title  IsAlone\n","0         0       3    0    1   7.2500        S      1        0\n","1         1       1    1    2  71.2833        C      3        0\n","2         1       3    1    1   7.9250        S      2        1\n","3         1       1    1    2  53.1000        S      3        0\n","4         0       3    0    2   8.0500        S      1        1"]},"execution_count":40,"metadata":{},"output_type":"execute_result"}],"source":["train.head()"]},{"cell_type":"code","execution_count":41,"id":"cebe1ba4","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:49.997488Z","iopub.status.busy":"2022-04-17T08:34:49.996881Z","iopub.status.idle":"2022-04-17T08:34:50.001499Z","shell.execute_reply":"2022-04-17T08:34:50.001921Z","shell.execute_reply.started":"2022-04-17T08:30:45.929094Z"},"papermill":{"duration":0.072782,"end_time":"2022-04-17T08:34:50.002091","exception":false,"start_time":"2022-04-17T08:34:49.929309","status":"completed"},"tags":[]},"outputs":[],"source":["for dataset in combine:\n","    dataset['Age*Class'] = dataset.Age * dataset.Pclass"]},{"cell_type":"code","execution_count":42,"id":"f31aa325","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:50.137825Z","iopub.status.busy":"2022-04-17T08:34:50.137276Z","iopub.status.idle":"2022-04-17T08:34:50.14334Z","shell.execute_reply":"2022-04-17T08:34:50.143837Z","shell.execute_reply.started":"2022-04-17T08:30:45.935877Z"},"papermill":{"duration":0.076476,"end_time":"2022-04-17T08:34:50.144013","exception":false,"start_time":"2022-04-17T08:34:50.067537","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age*Class</th>\n","      <th>Age</th>\n","      <th>Pclass</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Age*Class  Age  Pclass\n","0          3    1       3\n","1          2    2       1\n","2          3    1       3\n","3          2    2       1\n","4          6    2       3"]},"execution_count":42,"metadata":{},"output_type":"execute_result"}],"source":["train.loc[:, ['Age*Class', 'Age', 'Pclass']].head(5)"]},{"cell_type":"code","execution_count":43,"id":"20e6f9b4","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:50.277192Z","iopub.status.busy":"2022-04-17T08:34:50.27661Z","iopub.status.idle":"2022-04-17T08:34:50.283143Z","shell.execute_reply":"2022-04-17T08:34:50.282639Z","shell.execute_reply.started":"2022-04-17T08:30:45.950118Z"},"papermill":{"duration":0.074122,"end_time":"2022-04-17T08:34:50.283274","exception":false,"start_time":"2022-04-17T08:34:50.209152","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["'S'"]},"execution_count":43,"metadata":{},"output_type":"execute_result"}],"source":["fport = train.Embarked.dropna().mode()[0]\n","fport"]},{"cell_type":"code","execution_count":44,"id":"c90b1cc7","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:50.420033Z","iopub.status.busy":"2022-04-17T08:34:50.419442Z","iopub.status.idle":"2022-04-17T08:34:50.432936Z","shell.execute_reply":"2022-04-17T08:34:50.433412Z","shell.execute_reply.started":"2022-04-17T08:30:45.959061Z"},"papermill":{"duration":0.08373,"end_time":"2022-04-17T08:34:50.433575","exception":false,"start_time":"2022-04-17T08:34:50.349845","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Embarked</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>C</td>\n","      <td>0.553571</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Q</td>\n","      <td>0.389610</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>S</td>\n","      <td>0.339009</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Embarked  Survived\n","0        C  0.553571\n","1        Q  0.389610\n","2        S  0.339009"]},"execution_count":44,"metadata":{},"output_type":"execute_result"}],"source":["for dataset in combine:\n","    dataset['Embarked'] = dataset['Embarked'].fillna(fport)\n","    \n","train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=False).mean().sort_values(by='Survived', ascending=False)"]},{"cell_type":"code","execution_count":45,"id":"f1c6c0aa","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:50.571668Z","iopub.status.busy":"2022-04-17T08:34:50.570727Z","iopub.status.idle":"2022-04-17T08:34:50.576924Z","shell.execute_reply":"2022-04-17T08:34:50.577434Z","shell.execute_reply.started":"2022-04-17T08:30:45.978834Z"},"papermill":{"duration":0.075736,"end_time":"2022-04-17T08:34:50.577594","exception":false,"start_time":"2022-04-17T08:34:50.501858","status":"completed"},"tags":[]},"outputs":[],"source":["for dataset in combine:\n","    dataset['Embarked'] = dataset['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)"]},{"cell_type":"code","execution_count":46,"id":"402fba3d","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:50.713331Z","iopub.status.busy":"2022-04-17T08:34:50.712408Z","iopub.status.idle":"2022-04-17T08:34:50.722942Z","shell.execute_reply":"2022-04-17T08:34:50.723478Z","shell.execute_reply.started":"2022-04-17T08:30:45.986205Z"},"papermill":{"duration":0.080107,"end_time":"2022-04-17T08:34:50.723638","exception":false,"start_time":"2022-04-17T08:34:50.643531","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>IsAlone</th>\n","      <th>Age*Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>71.2833</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7.9250</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>53.1000</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex  Age     Fare  Embarked  Title  IsAlone  Age*Class\n","0         0       3    0    1   7.2500         0      1        0          3\n","1         1       1    1    2  71.2833         1      3        0          2\n","2         1       3    1    1   7.9250         0      2        1          3\n","3         1       1    1    2  53.1000         0      3        0          2\n","4         0       3    0    2   8.0500         0      1        1          6"]},"execution_count":46,"metadata":{},"output_type":"execute_result"}],"source":["train.head(5)"]},{"cell_type":"code","execution_count":47,"id":"956d1daa","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:50.861918Z","iopub.status.busy":"2022-04-17T08:34:50.860856Z","iopub.status.idle":"2022-04-17T08:34:50.872815Z","shell.execute_reply":"2022-04-17T08:34:50.87327Z","shell.execute_reply.started":"2022-04-17T08:30:46.004655Z"},"papermill":{"duration":0.082064,"end_time":"2022-04-17T08:34:50.873439","exception":false,"start_time":"2022-04-17T08:34:50.791375","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>IsAlone</th>\n","      <th>Age*Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>7.8292</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>7.0000</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>9.6875</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>8.6625</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12.2875</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Pclass  Sex  Age     Fare  Embarked  Title  IsAlone  Age*Class\n","0          892       3    0    2   7.8292         2      1        1          6\n","1          893       3    1    2   7.0000         0      3        0          6\n","2          894       2    0    3   9.6875         2      1        1          6\n","3          895       3    0    1   8.6625         0      1        1          3\n","4          896       3    1    1  12.2875         0      3        0          3"]},"execution_count":47,"metadata":{},"output_type":"execute_result"}],"source":["test['Fare'].fillna(test['Fare'].dropna().median(), inplace=True)\n","test.head()"]},{"cell_type":"code","execution_count":48,"id":"358af485","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:51.011768Z","iopub.status.busy":"2022-04-17T08:34:51.010825Z","iopub.status.idle":"2022-04-17T08:34:51.026851Z","shell.execute_reply":"2022-04-17T08:34:51.027351Z","shell.execute_reply.started":"2022-04-17T08:30:46.02453Z"},"papermill":{"duration":0.086589,"end_time":"2022-04-17T08:34:51.02752","exception":false,"start_time":"2022-04-17T08:34:50.940931","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FareBand</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>(-0.001, 7.91]</td>\n","      <td>0.197309</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>(7.91, 14.454]</td>\n","      <td>0.303571</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>(14.454, 31.0]</td>\n","      <td>0.454955</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>(31.0, 512.329]</td>\n","      <td>0.581081</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          FareBand  Survived\n","0   (-0.001, 7.91]  0.197309\n","1   (7.91, 14.454]  0.303571\n","2   (14.454, 31.0]  0.454955\n","3  (31.0, 512.329]  0.581081"]},"execution_count":48,"metadata":{},"output_type":"execute_result"}],"source":["train['FareBand'] = pd.qcut(train['Fare'], 4)\n","train[['FareBand', 'Survived']].groupby(['FareBand'], as_index=False).mean().sort_values(by='FareBand', ascending=True)"]},{"cell_type":"code","execution_count":49,"id":"b5204c48","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:51.165707Z","iopub.status.busy":"2022-04-17T08:34:51.164812Z","iopub.status.idle":"2022-04-17T08:34:51.176648Z","shell.execute_reply":"2022-04-17T08:34:51.177115Z","shell.execute_reply.started":"2022-04-17T08:30:46.046142Z"},"papermill":{"duration":0.082691,"end_time":"2022-04-17T08:34:51.177275","exception":false,"start_time":"2022-04-17T08:34:51.094584","status":"completed"},"tags":[]},"outputs":[],"source":["for dataset in combine:\n","    dataset.loc[ dataset['Fare'] <= 7.91, 'Fare'] = 0\n","    dataset.loc[(dataset['Fare'] > 7.91) & (dataset['Fare'] <= 14.454), 'Fare'] = 1\n","    dataset.loc[(dataset['Fare'] > 14.454) & (dataset['Fare'] <= 31), 'Fare']   = 2\n","    dataset.loc[ dataset['Fare'] > 31, 'Fare'] = 3\n","    dataset['Fare'] = dataset['Fare'].astype(int)\n","\n","train = train.drop(['FareBand'], axis=1)\n","combine = [train, test]"]},{"cell_type":"code","execution_count":50,"id":"5019ee31","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:51.315873Z","iopub.status.busy":"2022-04-17T08:34:51.315001Z","iopub.status.idle":"2022-04-17T08:34:51.324825Z","shell.execute_reply":"2022-04-17T08:34:51.32527Z","shell.execute_reply.started":"2022-04-17T08:30:46.063248Z"},"papermill":{"duration":0.080565,"end_time":"2022-04-17T08:34:51.325436","exception":false,"start_time":"2022-04-17T08:34:51.244871","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>IsAlone</th>\n","      <th>Age*Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass  Sex  Age  Fare  Embarked  Title  IsAlone  Age*Class\n","0         0       3    0    1     0         0      1        0          3\n","1         1       1    1    2     3         1      3        0          2\n","2         1       3    1    1     1         0      2        1          3\n","3         1       1    1    2     3         0      3        0          2\n","4         0       3    0    2     1         0      1        1          6"]},"execution_count":50,"metadata":{},"output_type":"execute_result"}],"source":["train.head(5)"]},{"cell_type":"code","execution_count":51,"id":"a59326c3","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:51.470519Z","iopub.status.busy":"2022-04-17T08:34:51.46957Z","iopub.status.idle":"2022-04-17T08:34:51.474761Z","shell.execute_reply":"2022-04-17T08:34:51.475961Z","shell.execute_reply.started":"2022-04-17T08:30:46.07505Z"},"papermill":{"duration":0.083446,"end_time":"2022-04-17T08:34:51.476204","exception":false,"start_time":"2022-04-17T08:34:51.392758","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>IsAlone</th>\n","      <th>Age*Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Pclass  Sex  Age  Fare  Embarked  Title  IsAlone  Age*Class\n","0          892       3    0    2     0         2      1        1          6\n","1          893       3    1    2     0         0      3        0          6\n","2          894       2    0    3     1         2      1        1          6\n","3          895       3    0    1     1         0      1        1          3\n","4          896       3    1    1     1         0      3        0          3"]},"execution_count":51,"metadata":{},"output_type":"execute_result"}],"source":["test.head(5)"]},{"cell_type":"code","execution_count":52,"id":"0f239faa","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:51.645386Z","iopub.status.busy":"2022-04-17T08:34:51.644603Z","iopub.status.idle":"2022-04-17T08:34:51.647247Z","shell.execute_reply":"2022-04-17T08:34:51.647753Z","shell.execute_reply.started":"2022-04-17T08:30:46.092412Z"},"papermill":{"duration":0.080058,"end_time":"2022-04-17T08:34:51.647933","exception":false,"start_time":"2022-04-17T08:34:51.567875","status":"completed"},"tags":[]},"outputs":[],"source":["X_train = train.drop(\"Survived\", axis=1)\n","Y_train = train[\"Survived\"]\n","X_test  = test.drop(\"PassengerId\", axis=1).copy()"]},{"cell_type":"code","execution_count":53,"id":"3b9049b3","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:51.788772Z","iopub.status.busy":"2022-04-17T08:34:51.787856Z","iopub.status.idle":"2022-04-17T08:34:51.793043Z","shell.execute_reply":"2022-04-17T08:34:51.793492Z","shell.execute_reply.started":"2022-04-17T08:30:46.102149Z"},"papermill":{"duration":0.077239,"end_time":"2022-04-17T08:34:51.79365","exception":false,"start_time":"2022-04-17T08:34:51.716411","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["((891, 8), (891,), (418, 8))"]},"execution_count":53,"metadata":{},"output_type":"execute_result"}],"source":["X_train.shape, Y_train.shape, X_test.shape"]},{"cell_type":"code","execution_count":54,"id":"5a4d14cf","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:51.941046Z","iopub.status.busy":"2022-04-17T08:34:51.936536Z","iopub.status.idle":"2022-04-17T08:34:51.966446Z","shell.execute_reply":"2022-04-17T08:34:51.966913Z","shell.execute_reply.started":"2022-04-17T08:30:46.112094Z"},"papermill":{"duration":0.101969,"end_time":"2022-04-17T08:34:51.96709","exception":false,"start_time":"2022-04-17T08:34:51.865121","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["80.36"]},"execution_count":54,"metadata":{},"output_type":"execute_result"}],"source":["# 로지스틱 회귀분석\n","log_reg = LogisticRegression()\n","log_reg.fit(X_train, Y_train)\n","Y_pred = log_reg.predict(X_test)\n","acc_log = round(log_reg.score(X_train, Y_train) * 100, 2)\n","acc_log  # acc = accuracy"]},{"cell_type":"code","execution_count":55,"id":"7acdebc0","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:52.111015Z","iopub.status.busy":"2022-04-17T08:34:52.110384Z","iopub.status.idle":"2022-04-17T08:34:52.117517Z","shell.execute_reply":"2022-04-17T08:34:52.117895Z","shell.execute_reply.started":"2022-04-17T08:30:46.144076Z"},"papermill":{"duration":0.082233,"end_time":"2022-04-17T08:34:52.11807","exception":false,"start_time":"2022-04-17T08:34:52.035837","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Feature</th>\n","      <th>Correlation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Sex</td>\n","      <td>2.201619</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Title</td>\n","      <td>0.397888</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Age</td>\n","      <td>0.287011</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Embarked</td>\n","      <td>0.261473</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>IsAlone</td>\n","      <td>0.126553</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Fare</td>\n","      <td>-0.086655</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Age*Class</td>\n","      <td>-0.311069</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Pclass</td>\n","      <td>-0.750700</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     Feature  Correlation\n","1        Sex     2.201619\n","5      Title     0.397888\n","2        Age     0.287011\n","4   Embarked     0.261473\n","6    IsAlone     0.126553\n","3       Fare    -0.086655\n","7  Age*Class    -0.311069\n","0     Pclass    -0.750700"]},"execution_count":55,"metadata":{},"output_type":"execute_result"}],"source":["coeff = pd.DataFrame(train.columns.delete(0))\n","coeff.columns = ['Feature']\n","coeff[\"Correlation\"] = pd.Series(log_reg.coef_[0])\n","\n","coeff.sort_values(by='Correlation', ascending=False)"]},{"cell_type":"code","execution_count":56,"id":"ccdd5ab2","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:52.259811Z","iopub.status.busy":"2022-04-17T08:34:52.25922Z","iopub.status.idle":"2022-04-17T08:34:52.340686Z","shell.execute_reply":"2022-04-17T08:34:52.341107Z","shell.execute_reply.started":"2022-04-17T08:30:46.157305Z"},"papermill":{"duration":0.153829,"end_time":"2022-04-17T08:34:52.341272","exception":false,"start_time":"2022-04-17T08:34:52.187443","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["78.23"]},"execution_count":56,"metadata":{},"output_type":"execute_result"}],"source":["svc = SVC()\n","svc.fit(X_train, Y_train)\n","Y_pred = svc.predict(X_test)\n","acc_svc = round(svc.score(X_train, Y_train) * 100, 2)\n","acc_svc"]},{"cell_type":"code","execution_count":57,"id":"5de24eb0","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:52.483436Z","iopub.status.busy":"2022-04-17T08:34:52.482814Z","iopub.status.idle":"2022-04-17T08:34:52.537881Z","shell.execute_reply":"2022-04-17T08:34:52.537349Z","shell.execute_reply.started":"2022-04-17T08:30:46.239658Z"},"papermill":{"duration":0.127168,"end_time":"2022-04-17T08:34:52.538033","exception":false,"start_time":"2022-04-17T08:34:52.410865","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["84.74"]},"execution_count":57,"metadata":{},"output_type":"execute_result"}],"source":["knn = KNeighborsClassifier(n_neighbors = 3)\n","knn.fit(X_train, Y_train)\n","Y_pred = knn.predict(X_test)\n","acc_knn = round(knn.score(X_train, Y_train) * 100, 2)\n","acc_knn"]},{"cell_type":"code","execution_count":58,"id":"c82f79da","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:52.684441Z","iopub.status.busy":"2022-04-17T08:34:52.683842Z","iopub.status.idle":"2022-04-17T08:34:52.692282Z","shell.execute_reply":"2022-04-17T08:34:52.692749Z","shell.execute_reply.started":"2022-04-17T08:30:46.297849Z"},"papermill":{"duration":0.084911,"end_time":"2022-04-17T08:34:52.692913","exception":false,"start_time":"2022-04-17T08:34:52.608002","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["72.28"]},"execution_count":58,"metadata":{},"output_type":"execute_result"}],"source":["# 가우시안 Naive Bayes\n","gaussian = GaussianNB()\n","gaussian.fit(X_train, Y_train)\n","Y_pred = gaussian.predict(X_test)\n","acc_gaussian = round(gaussian.score(X_train, Y_train) * 100, 2)\n","acc_gaussian"]},{"cell_type":"code","execution_count":59,"id":"1b57cbd3","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:52.836641Z","iopub.status.busy":"2022-04-17T08:34:52.835634Z","iopub.status.idle":"2022-04-17T08:34:52.846914Z","shell.execute_reply":"2022-04-17T08:34:52.84744Z","shell.execute_reply.started":"2022-04-17T08:30:46.313027Z"},"papermill":{"duration":0.08498,"end_time":"2022-04-17T08:34:52.847602","exception":false,"start_time":"2022-04-17T08:34:52.762622","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["78.34"]},"execution_count":59,"metadata":{},"output_type":"execute_result"}],"source":["# 퍼셉트론\n","perceptron = Perceptron()\n","perceptron.fit(X_train, Y_train)\n","Y_pred = perceptron.predict(X_test)\n","acc_perceptron = round(perceptron.score(X_train, Y_train) * 100, 2)\n","acc_perceptron"]},{"cell_type":"code","execution_count":60,"id":"e03d1a78","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:52.990542Z","iopub.status.busy":"2022-04-17T08:34:52.989957Z","iopub.status.idle":"2022-04-17T08:34:53.042628Z","shell.execute_reply":"2022-04-17T08:34:53.043078Z","shell.execute_reply.started":"2022-04-17T08:30:46.327056Z"},"papermill":{"duration":0.125473,"end_time":"2022-04-17T08:34:53.043238","exception":false,"start_time":"2022-04-17T08:34:52.917765","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/opt/conda/lib/python3.7/site-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  ConvergenceWarning,\n"]},{"data":{"text/plain":["79.12"]},"execution_count":60,"metadata":{},"output_type":"execute_result"}],"source":["# 선형 SVC\n","linear_svc = LinearSVC()\n","linear_svc.fit(X_train, Y_train)\n","Y_pred = linear_svc.predict(X_test)\n","acc_linear_svc = round(linear_svc.score(X_train, Y_train) * 100, 2)\n","acc_linear_svc"]},{"cell_type":"code","execution_count":61,"id":"7a3f9840","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:53.189426Z","iopub.status.busy":"2022-04-17T08:34:53.188757Z","iopub.status.idle":"2022-04-17T08:34:53.199264Z","shell.execute_reply":"2022-04-17T08:34:53.199768Z","shell.execute_reply.started":"2022-04-17T08:30:46.379792Z"},"papermill":{"duration":0.084983,"end_time":"2022-04-17T08:34:53.199932","exception":false,"start_time":"2022-04-17T08:34:53.114949","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["77.44"]},"execution_count":61,"metadata":{},"output_type":"execute_result"}],"source":["# 확률적 경사하강법\n","sgd = SGDClassifier()\n","sgd.fit(X_train, Y_train)\n","Y_pred = sgd.predict(X_test)\n","acc_sgd = round(sgd.score(X_train, Y_train) * 100, 2)\n","acc_sgd"]},{"cell_type":"code","execution_count":62,"id":"9c2021fc","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:53.346697Z","iopub.status.busy":"2022-04-17T08:34:53.346099Z","iopub.status.idle":"2022-04-17T08:34:53.35672Z","shell.execute_reply":"2022-04-17T08:34:53.357281Z","shell.execute_reply.started":"2022-04-17T08:30:46.39229Z"},"papermill":{"duration":0.085906,"end_time":"2022-04-17T08:34:53.357441","exception":false,"start_time":"2022-04-17T08:34:53.271535","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["86.76"]},"execution_count":62,"metadata":{},"output_type":"execute_result"}],"source":["# 판단 트리\n","decision_tree = DecisionTreeClassifier()\n","decision_tree.fit(X_train, Y_train)\n","Y_pred = decision_tree.predict(X_test)\n","acc_decision_tree = round(decision_tree.score(X_train, Y_train) * 100, 2)\n","acc_decision_tree"]},{"cell_type":"code","execution_count":63,"id":"801da143","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:53.509603Z","iopub.status.busy":"2022-04-17T08:34:53.508632Z","iopub.status.idle":"2022-04-17T08:34:53.722939Z","shell.execute_reply":"2022-04-17T08:34:53.723389Z","shell.execute_reply.started":"2022-04-17T08:30:46.407918Z"},"papermill":{"duration":0.294117,"end_time":"2022-04-17T08:34:53.723559","exception":false,"start_time":"2022-04-17T08:34:53.429442","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["86.76"]},"execution_count":63,"metadata":{},"output_type":"execute_result"}],"source":["# 랜덤 포레스트\n","random_forest = RandomForestClassifier(n_estimators=100)\n","random_forest.fit(X_train, Y_train)\n","Y_pred = random_forest.predict(X_test)\n","random_forest.score(X_train, Y_train)\n","acc_random_forest = round(random_forest.score(X_train, Y_train) * 100, 2)\n","acc_random_forest"]},{"cell_type":"code","execution_count":64,"id":"f176a3bf","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:53.870089Z","iopub.status.busy":"2022-04-17T08:34:53.869166Z","iopub.status.idle":"2022-04-17T08:34:53.880563Z","shell.execute_reply":"2022-04-17T08:34:53.880995Z","shell.execute_reply.started":"2022-04-17T08:30:46.627578Z"},"papermill":{"duration":0.086404,"end_time":"2022-04-17T08:34:53.881149","exception":false,"start_time":"2022-04-17T08:34:53.794745","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>Random Forest</td>\n","      <td>86.76</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Decision Tree</td>\n","      <td>86.76</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>KNN</td>\n","      <td>84.74</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Logistic Regression</td>\n","      <td>80.36</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Linear SVC</td>\n","      <td>79.12</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Perceptron</td>\n","      <td>78.34</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Support Vector Machines</td>\n","      <td>78.23</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Stochastic Gradient Decent</td>\n","      <td>77.44</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Naive Bayes</td>\n","      <td>72.28</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                        Model  Score\n","3               Random Forest  86.76\n","8               Decision Tree  86.76\n","1                         KNN  84.74\n","2         Logistic Regression  80.36\n","7                  Linear SVC  79.12\n","5                  Perceptron  78.34\n","0     Support Vector Machines  78.23\n","6  Stochastic Gradient Decent  77.44\n","4                 Naive Bayes  72.28"]},"execution_count":64,"metadata":{},"output_type":"execute_result"}],"source":["models = pd.DataFrame({\n","    'Model': ['Support Vector Machines', 'KNN', 'Logistic Regression', \n","              'Random Forest', 'Naive Bayes', 'Perceptron', \n","              'Stochastic Gradient Decent', 'Linear SVC', \n","              'Decision Tree'],\n","    'Score': [acc_svc, acc_knn, acc_log, \n","              acc_random_forest, acc_gaussian, acc_perceptron, \n","              acc_sgd, acc_linear_svc, acc_decision_tree]})\n","models.sort_values(by='Score', ascending=False)"]},{"cell_type":"code","execution_count":65,"id":"4061d1eb","metadata":{"execution":{"iopub.execute_input":"2022-04-17T08:34:54.030839Z","iopub.status.busy":"2022-04-17T08:34:54.030216Z","iopub.status.idle":"2022-04-17T08:34:54.035059Z","shell.execute_reply":"2022-04-17T08:34:54.035567Z","shell.execute_reply.started":"2022-04-17T08:30:46.641635Z"},"papermill":{"duration":0.082721,"end_time":"2022-04-17T08:34:54.035725","exception":false,"start_time":"2022-04-17T08:34:53.953004","status":"completed"},"tags":[]},"outputs":[],"source":["submission = pd.DataFrame({\n","        \"PassengerId\": test[\"PassengerId\"],\n","        \"Survived\": Y_pred\n","    })\n","submission.to_csv('./submission.csv', index=False)"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.12"},"papermill":{"default_parameters":{},"duration":24.92823,"end_time":"2022-04-17T08:34:54.817466","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2022-04-17T08:34:29.889236","version":"2.3.3"}},"nbformat":4,"nbformat_minor":5}
